.TH GIT_CMS_CHECKDEPS 1 LOCAL

.SH NAME

git-cms-checkdeps - CMSSW helper to checkout packages which need to be recompiled after some change

.SH SYNOPSIS

.B git cms-checkdeps [options] 

.SH DESCRIPTION

Utility to check your local development area against the CMSSW release.
Any modified header files or python modules are found and the package
dependencies of these files will be returned. addpkg-ing these packages
and rebuilding them should provide a full and consistent build.

.SH OPTIONS

Notice that by default it will not checkout anything, use -a option to do so.

.TP 5

-p 

look for python modules and their dependencies  (ON by default)

.TP 5

-h 

look for header files and their dependencies    (ON by default)

.TP 5

-b 

look for BuildFile files and their dependencies (OFF by default)

.TP 5

-f 

print name of changed file name instead of type of dependency (OFF by default)

.TP 5

-a 

will add/checkout the packages into your development area (OFF by default)

.TP 5

-A 

will check all dependencies i.e. header (-h), python(-p) and BuildFile(-b)

.TP 5

-d

do not create dummy copy of deleted files in poison directory. Dummy copies
are useful to find out if deleted headers files are included by other source files.

.TP 5

-D

only dummy copy of deleted files in poison directory created.
NOTE: all other dependency check/add command-line args are ignored.

.TP 5

-q

will pass -Q option to cvs to make it quiet

.SH POSSIBLE MISBEHAVIORS

git cms-checkdeps tries to be smart and ignore changes which include a CVS
keyword. However this mean that if on the same line you change a CVS keyword
and something else, these changes will be ignored as well. This in general not
an issue, gowever there might be corner cases in which you might have used a
CVS keyword in some place where there is also a change actually matters on 
the same line. git cms-checkdeps will not spot those.
